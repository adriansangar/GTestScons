import os
import sys
from glob import glob
from SCons.Script import Environment

# Take Path from argv
path = None
for arg in sys.argv[1:]:
    if arg.startswith("PATH="):
        path = arg.split("=")[1]
        break

# Routes
compiler_path = os.path.abspath("TOOLS\\MinGW\\bin")
gtestDir = 'TOOLS\\GoogleTest'
gtestSrcDir = os.path.join(gtestDir, 'googletest')
gtestIncDir = os.path.join(gtestDir, 'googletest', 'include')

# Flags
compiler_flags = ["-Wall", "-O2"]
cpppath = ['.', path, path+"/include/", "TOOLS/GoogleTest/googletest/include/", "TOOLS/GoogleTest/googletest/"]
cxxflags = []

# Files
googleSources = Glob(os.path.join(gtestSrcDir, '*.cc'))
cppSources = glob(path + '/**/*.cpp', recursive=True)
sources = glob(path + '/**/*.c', recursive=True)
sources.append(cppSources)

# Environment
env_target = Environment()

# Add paths
env_target.Append(CPPPATH=cpppath)

# GoogleTest Library
gtest_lib = env_target.StaticLibrary('gtest', googleSources)

# GoogleTest Library path
gtest_lib_path = os.path.join('.', 'libgtest.a')
gtest_lib_dir = os.path.dirname(gtest_lib_path)
print(gtest_lib_dir)

# Complete Environment
env_target.Append(CXXFLAGS=cxxflags, 
                  ENV={'PATH': compiler_path},
                  SRC=sources, CCFLAGS=compiler_flags, LIBS=['gtest', 'gcov'],
                  LIBPATH=[gtest_lib_dir],
                  )

# Program rules
program_target = env_target.Program(target = path + '/main_target', source = env_target['SRC'], LINKFLAGS=['-L.',  '-lgtest'])

# Update clean rule
clean_files = ['*.o', '*.exe', '*.gcda', '*.gcno']

# Find clean files
clean_files.extend(glob(path +'/**/*.gcno', recursive = True))
clean_files.extend(glob(path +'/**/*.gcda', recursive = True))

# Clean rules
clean = env_target.Clean(program_target, clean_files)