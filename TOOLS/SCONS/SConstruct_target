import os
import sys
from glob import glob
from SCons.Script import Environment

# Take Path from argv
path = None
for arg in sys.argv[1:]:
    if arg.startswith("PATH="):
        path = arg.split("=")[1]
        break

# Routes
compiler_path = os.path.abspath("TOOLS\\MinGW\\bin")

# Flags
compiler_flags = ["-Wall", "-O2"]
cpppath = [path, path+"/include/"]
cxxflags = []

# Files
# unity = glob('TOOLS/UNITY/**/*.c', recursive=True)
sources = glob(path + '/**/*.cpp', recursive=True)
# sources.append(unity)

# Environments
env_target = Environment(CPPPATH=cpppath, CXXFLAGS=cxxflags, 
                         ENV={'PATH': compiler_path}, SRC=sources, 
                         CCFLAGS=compiler_flags,
                         CC='gcc', CXX='g++')

# Program rules
program_target = env_target.Program(target = path + '/main_target', source = env_target['SRC'])

# Update clean rule
clean_files = ['*.o', '*.exe', '*.gcda', '*.gcno']

# Find clean files
clean_files.extend(glob(path +'/**/*.gcno', recursive = True))
clean_files.extend(glob(path +'/**/*.gcda', recursive = True))

# Clean rules
clean = env_target.Clean(program_target, clean_files)